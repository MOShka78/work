 # Python example:

def isEven(value):
    return value % 2 == 0

# В представленном примере функция возвращает значение false при нечетном значении аргумента
# Это может быть полезно, если в дальнейшем требуется использовании четности числа
# Но если для юзера необходимо всего 1 раз выполнить определение четности это будет нецелесообразно
# Так же к минусам можно отнести следующий фактор:
# Нет проверки ввода юзером нечелого числа (В задании написано, что работа проводится только с целыми числами)

def Even(value):
    if not(value%1):
        if value % 2 == 0:
            return print('Ваше число является четным')
        return print('Ваше число является нечетным')
    return print('Вы ввели нецелое число')
    
#Тест
Even(1)
Even(131)
Even(52)
Even(62)
Even(1.1)

# Данная реализация не возвращает значение, а выводит в терминал показания четности
# Появилась проверка на целое число
# Появилась проблема, что значение четности отображаются в терминала, но не могут никак использоваться дальше
# Правильней будет выполнить проверку на четность челого числа следующим образом

def is_int(value):
    try:
        int(value)
        return True
    except ValueError:
        return False

def isEven_badboy():
    user_number = input('Введите целое число: ')
    if is_int(user_number):
        if int(user_number) % 2 == 0:
            print('Ваше число является четным')
            return True
        print('Ваше число является нечетным')
        return False
    print('Вы ввели нецелое число или допустили ошибку')
    return False

#Тест
example = isEven_badboy()

if example:
    print('Base')

# Ввод значений происходит пользователем
# Так же при вызове функции возвращается логическое значение
# Осуществляется проверка на ввод допустимых значений
# Возможно, коряво обьясняю, но надеюсь все понятно
